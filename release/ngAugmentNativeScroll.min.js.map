{"version":3,"sources":["webpack:///ngAugmentNativeScroll.min.js","webpack:///webpack/bootstrap aab3e68b4238c983fd23","webpack:///./index.js","webpack:///./kineticEngine.value.js","webpack:///./utils.factory.js","webpack:///./connectScrolls.directive.js","webpack:///./scrollArea.directive.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","angular","value","factory","directive","KineticEngine","context","utils","leftTracker","now","elapsed","delta","getTime","timeStamp","scrollLeft","lastScrollLeft","velocityLeft","userOptions","movingAverage","topTracker","scrollTop","lastScrollTop","velocityTop","scrollTo","left","top","correctedLeft","Math","round","correctedTop","childNodes","forEach","node","$el","children","maxScrollX","scrollWidth","clientWidth","maxScrollY","scrollHeight","clientHeight","autoScroll","deltaY","deltaX","scrollX","scrollY","timeConstant","amplitudeTop","exp","amplitudeLeft","targetLeft","targetTop","autoScrollTracker","requestAnimationFrame","isAutoScrolling","cancelAutoScroll","cancelAnimationFrame","tap","e","pressed","referenceX","getPoint","hasTouch","x","referenceY","y","$listener","addEventListener","swipe","end","preventDefault","stopPropagation","removeEventListener","enableKinetics","$on","UtilsFactory","findMatchingTarget","target","nodes","found","length","tagName","find","this","parentElement","point","event","touches","clientX","clientY","Date","ConnectScrolls","kineticEngine","restrict","scope","options","transclude","replace","template","link","element","window","DETECT_EVT","activeId","undefined","defaultOptions","extend","setActiveNode","onScroll","valX","valY","$parent","connectedScrolls","scrollToStart","scrollToStartLeft","scrollToStartTop","scrollToEnd","maxScrollLeft","maxScrollTop","scrollToEndLeft","scrollToEndTop","controller","$scope","addScrollArea","push","$inject","ScrollArea","require","attrs","connectScrollsCtrl","attr","random","toString","substring"],"mappings":"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","file":"ngAugmentNativeScroll.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tangular.module('ngAugmentNativeScroll', [])\r\n\t    .value('kineticEngine', __webpack_require__(1))\r\n\t    .factory('utils', __webpack_require__(2))\r\n\t    .directive('connectScrolls', __webpack_require__(3))\r\n\t    .directive('scrollArea', __webpack_require__(4));\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\tfunction KineticEngine (context, utils) {\r\n\t    context.leftTracker = function () {\r\n\t        var now, elapsed, delta;\r\n\t\r\n\t        now = utils.getTime();\r\n\t        elapsed = now - context.timeStamp;\r\n\t        context.timeStamp = now;\r\n\t        delta = context.scrollLeft - context.lastScrollLeft;\r\n\t        context.lastScrollLeft = context.scrollLeft;\r\n\t\r\n\t        context.velocityLeft = context.userOptions.movingAverage * (1000 * delta / (1 + elapsed)) + 0.2 * context.velocityLeft;\r\n\t    }\r\n\t\r\n\t    context.topTracker = function () {\r\n\t        var now, elapsed, delta;\r\n\t\r\n\t        now = utils.getTime();\r\n\t        elapsed = now - context.timeStamp;\r\n\t        context.timeStamp = now;\r\n\t        delta = context.scrollTop - context.lastScrollTop;\r\n\t        context.lastScrollTop = context.scrollTop;\r\n\t\r\n\t        context.velocityTop = context.userOptions.movingAverage * (1000 * delta / (1 + elapsed)) + 0.2 * context.velocityTop;\r\n\t    }\r\n\t\r\n\t    context.scrollTo = function(left, top) {\r\n\t        var correctedLeft = Math.round(left);\r\n\t        var correctedTop = Math.round(top);\r\n\t\r\n\t        context.childNodes.forEach(function(node) {\r\n\t            var $el = node.children[0];\r\n\t            var maxScrollX = $el.scrollWidth - $el.clientWidth;\r\n\t            var maxScrollY = $el.scrollHeight - $el.clientHeight;\r\n\t\r\n\t            if ( maxScrollX > 0 && correctedLeft >= 0 && correctedLeft <= maxScrollX ) {\r\n\t                $el.scrollLeft = correctedLeft;\r\n\t                context.scrollLeft = correctedLeft;\r\n\t            }\r\n\t            if ( maxScrollY > 0 && correctedTop >= 0 && correctedTop <= maxScrollY ) {\r\n\t                $el.scrollTop = correctedTop;\r\n\t                context.scrollTop = correctedTop;\r\n\t            }\r\n\t        })\r\n\t    }\r\n\t\r\n\t    context.autoScroll = function() {\r\n\t        var elapsed;\r\n\t        var deltaY = 0, deltaX = 0, scrollX = 0, scrollY = 0;\r\n\t        var timeConstant = 325;\r\n\t\r\n\t        elapsed = utils.getTime() - context.timeStamp;\r\n\t\r\n\t        if ( context.amplitudeTop ) {\r\n\t            deltaY = -context.amplitudeTop * Math.exp(-elapsed / timeConstant);\r\n\t        }\r\n\t        if ( context.amplitudeLeft ) {\r\n\t            deltaX = -context.amplitudeLeft * Math.exp(-elapsed / timeConstant);\r\n\t        }\r\n\t\r\n\t        if ( deltaX > 0.5 || deltaX < -0.5 ) {\r\n\t            scrollX = deltaX;\r\n\t        } else {\r\n\t            scrollX = 0;\r\n\t        }\r\n\t\r\n\t        if ( deltaY > 0.5 || deltaY < -0.5 ) {\r\n\t            scrollY = deltaY;\r\n\t        } else {\r\n\t            scrollY = 0;\r\n\t        }\r\n\t\r\n\t        context.scrollTo(context.targetLeft + scrollX, context.targetTop + scrollY);\r\n\t\r\n\t        if ( scrollX !== 0 || scrollY !== 0 ) {\r\n\t            context.autoScrollTracker = requestAnimationFrame(context.autoScroll);\r\n\t        } else {\r\n\t            context.isAutoScrolling = false;\r\n\t            context.autoScrollTracker = null;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    context.cancelAutoScroll = function () {\r\n\t        if ( context.isAutoScrolling ) {\r\n\t            cancelAnimationFrame(context.autoScrollTracker);\r\n\t            context.isAutoScrolling = false;\r\n\t            context.autoScrollTracker = null;\r\n\t        }\r\n\t    }\r\n\t\r\n\t    context.tap = function (e) {\r\n\t        context.pressed = true;\r\n\t        context.referenceX = utils.getPoint(e, context.hasTouch).x;\r\n\t        context.referenceY = utils.getPoint(e, context.hasTouch).y;\r\n\t\r\n\t        context.velocityTop = context.amplitudeTop = 0;\r\n\t        context.velocityLeft = context.amplitudeLeft = 0;\r\n\t\r\n\t        context.lastScrollTop = context.scrollTop;\r\n\t        context.lastScrollLeft = context.scrollLeft;\r\n\t\r\n\t        context.timeStamp = utils.getTime();\r\n\t\r\n\t        context.cancelAutoScroll();\r\n\t\r\n\t        context.$listener.addEventListener( 'mousemove', context.swipe, true );\r\n\t        context.$listener.addEventListener( 'mouseup', context.end, true );\r\n\t\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    context.swipe = function (e) {\r\n\t        var x, y, deltaX, deltaY;\r\n\t\r\n\t        if (context.pressed) {\r\n\t            x = utils.getPoint(e, context.hasTouch).x;\r\n\t            y = utils.getPoint(e, context.hasTouch).y;\r\n\t\r\n\t            deltaX = context.referenceX - x;\r\n\t            deltaY = context.referenceY - y;\r\n\t\r\n\t            if (deltaX > 2 || deltaX < -2) {\r\n\t                context.referenceX = x;\r\n\t            } else {\r\n\t                deltaX = 0;\r\n\t            }\r\n\t            if (deltaY > 2 || deltaY < -2) {\r\n\t                context.referenceY = y;\r\n\t            } else {\r\n\t                deltaY = 0;\r\n\t            }\r\n\t\r\n\t            context.topTracker();\r\n\t            context.leftTracker();\r\n\t\r\n\t            context.scrollTo( context.scrollLeft + deltaX, context.scrollTop + deltaY );\r\n\t        }\r\n\t\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    context.end = function(e) {\r\n\t        context.pressed = false;\r\n\t\r\n\t        context.timeStamp = utils.getTime();\r\n\t        context.topTracker();\r\n\t        context.leftTracker();\r\n\t\r\n\t        if (context.velocityTop > 10 || context.velocityTop < -10) {\r\n\t            context.amplitudeTop = 0.8 * context.velocityTop;\r\n\t            context.targetTop = Math.round(context.scrollTop + context.amplitudeTop);\r\n\t        } else {\r\n\t            context.targetTop = context.scrollTop;\r\n\t        }\r\n\t        if (context.velocityLeft > 10 || context.velocityLeft < -10) {\r\n\t            context.amplitudeLeft = 0.8 * context.velocityLeft;\r\n\t            context.targetLeft = Math.round(context.scrollLeft + context.amplitudeLeft);\r\n\t        } else {\r\n\t            context.targetLeft = context.scrollLeft;\r\n\t        }\r\n\t\r\n\t        context.isAutoScrolling = true;\r\n\t        context.autoScrollTracker = requestAnimationFrame(context.autoScroll);\r\n\t\r\n\t        context.$listener.removeEventListener( 'mousemove', context.swipe );\r\n\t        context.$listener.removeEventListener( 'mouseup', context.end );\r\n\t\r\n\t        e.preventDefault();\r\n\t        e.stopPropagation();\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    if ( ! context.hasTouch && context.userOptions.enableKinetics ) {\r\n\t        context.$listener.addEventListener( 'mousedown', context.tap, true );\r\n\t    }\r\n\t\r\n\t    context.$on('$destroy', function() {\r\n\t        context.$listener.removeEventListener( 'mousedown', context.tap );\r\n\t    });\r\n\t}\r\n\t\r\n\tmodule.exports = KineticEngine;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tfunction UtilsFactory () {\r\n\t    return {\r\n\t        findMatchingTarget: function (target, nodes) {\r\n\t            var found;\r\n\t\r\n\t            if ( ! nodes.length || target.tagName === 'BODY' ) {\r\n\t                return 'BODY';\r\n\t            }\r\n\t\r\n\t            found = nodes.find(function (node) {\r\n\t                return node.id === target.id\r\n\t            });\r\n\t\r\n\t            if ( found ) {\r\n\t                return target.id;\r\n\t            } else {\r\n\t                return this.findMatchingTarget(target.parentElement, nodes);\r\n\t            }\r\n\t        },\r\n\t        getPoint: function (e, hasTouch) {\r\n\t            var point;\r\n\t\r\n\t            if( hasTouch && event.touches.length ) {\r\n\t                point = {\r\n\t                    'x' : event.touches[0].clientX,\r\n\t                    'y' : event.touches[0].clientY\r\n\t                }\r\n\t            } else {\r\n\t                point = {\r\n\t                    'x' : event.clientX,\r\n\t                    'y' : event.clientY\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return point;\r\n\t        },\r\n\t        getTime: Date.now || function getTime () {\r\n\t            return new Date().utils.getTime();\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tmodule.exports = UtilsFactory\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\tfunction ConnectScrolls (utils, kineticEngine) {\r\n\t    return {\r\n\t        restrict: 'E',\r\n\t        scope: {\r\n\t            options: '='\r\n\t        },\r\n\t        transclude: true,\r\n\t        replace: true,\r\n\t        template: '<span data-name=\"conntect-scrolls\" ng-transclude></span>',\r\n\t        link: function (scope, element) {\r\n\t            scope.hasTouch = 'ontouchstart' in window;\r\n\t            scope.DETECT_EVT = scope.hasTouch ? 'touchstart' : 'mouseover';\r\n\t            scope.activeId = undefined;\r\n\t            scope.$listener = element[0];\r\n\t\r\n\t            scope.scrollLeft = 0;\r\n\t            scope.scrollTop = 0;\r\n\t            scope.lastScrollLeft = 0;\r\n\t            scope.lastScrollTop = 0;\r\n\t            scope.targetTop = 0;\r\n\t            scope.targetLeft = 0;\r\n\t\r\n\t            scope.velocityTop = 0;\r\n\t            scope.velocityLeft = 0;\r\n\t            scope.amplitudeTop = 0;\r\n\t            scope.amplitudeLeft = 0;\r\n\t\r\n\t            scope.timeStamp = 0;\r\n\t            scope.referenceX = 0;\r\n\t            scope.referenceY = 0;\r\n\t            scope.pressed = false;\r\n\t            scope.autoScrollTracker = null;\r\n\t            scope.isAutoScrolling = false;\r\n\t\r\n\t            scope.defaultOptions = {\r\n\t                enableKinetics: false,\r\n\t                movingAverage: 0.1\r\n\t            };\r\n\t            scope.userOptions = angular.extend({}, scope.defaultOptions, scope.options);\r\n\t\r\n\t            kineticEngine.call(this, scope, utils);\r\n\t\r\n\t            scope.setActiveNode = function (e) {\r\n\t                scope.activeId = utils.findMatchingTarget(e.target, scope.childNodes);\r\n\t            }\r\n\t\r\n\t            scope.onScroll = function (e) {\r\n\t                if ( this.pressed || this.isAutoScrolling ) {\r\n\t                    e.preventDefault();\r\n\t                    e.stopPropagation();\r\n\t                    return;\r\n\t                }\r\n\t\r\n\t                var target = e.target;\r\n\t                var valX = undefined;\r\n\t                var valY = undefined;\r\n\t\r\n\t                if ( target.clientWidth !== target.scrollWidth ) {\r\n\t                    valX = target.scrollLeft;\r\n\t                    scope.lastScrollLeft = scope.scrollLeft;\r\n\t                    scope.scrollLeft = valX;\r\n\t                } else {\r\n\t                    valX = scope.scrollLeft;\r\n\t                }\r\n\t                if ( target.clientHeight !== target.scrollHeight ) {\r\n\t                    valY = target.scrollTop;\r\n\t                    scope.lastScrollTop = scope.scrollTop;\r\n\t                    scope.scrollTop = valY;\r\n\t                } else {\r\n\t                    valY = scope.scrollTop;\r\n\t                }\r\n\t\r\n\t                scope.childNodes.forEach(function(node) {\r\n\t                    if ( node.id !== scope.activeId ) {\r\n\t                        node.children[0].scrollLeft = valX;\r\n\t                        node.children[0].scrollTop = valY;\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t\r\n\t            scope.$listener.addEventListener( scope.DETECT_EVT, scope.setActiveNode, true );\r\n\t            scope.$listener.addEventListener( 'scroll', scope.onScroll, true );\r\n\t\r\n\t            scope.$on('$destroy', function() {\r\n\t                scope.$listener.removeEventListener( scope.DETECT_EVT, scope.setActiveNode );\r\n\t                scope.$listener.removeEventListener( 'scroll', scope.onScroll );\r\n\t            });\r\n\t\r\n\t            // expose few methods to the parent controller\r\n\t            scope.$parent.connectedScrolls = {\r\n\t                scrollToStart: function () {\r\n\t                    scope.cancelAutoScroll();\r\n\t                    scope.scrollTo(0, 0);\r\n\t                },\r\n\t                scrollToStartLeft: function () {\r\n\t                    scope.cancelAutoScroll();\r\n\t                    scope.scrollTo(0, scope.scrollTop);\r\n\t                },\r\n\t                scrollToStartTop: function () {\r\n\t                    scope.cancelAutoScroll();\r\n\t                    scope.scrollTo(scope.scrollLeft, 0);\r\n\t                },\r\n\t                scrollToEnd: function () {\r\n\t                    var maxScrollLeft = 0;\r\n\t                    var maxScrollTop = 0;\r\n\t\r\n\t                    scope.childNodes.forEach(function (node) {\r\n\t                        var $el = node.children[0];\r\n\t                        var maxScrollX = $el.scrollWidth - $el.clientWidth;\r\n\t                        var maxScrollY = $el.scrollHeight - $el.clientHeight;\r\n\t\r\n\t                        if ( maxScrollX > maxScrollLeft ) {\r\n\t                            maxScrollLeft = maxScrollX;\r\n\t                        }\r\n\t                        if ( maxScrollY > maxScrollTop ) {\r\n\t                            maxScrollTop = maxScrollY;\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    scope.cancelAutoScroll();\r\n\t                    scope.scrollTo(maxScrollLeft, maxScrollTop);\r\n\t                },\r\n\t                scrollToEndLeft: function () {\r\n\t                    var maxScrollLeft = 0;\r\n\t\r\n\t                    scope.childNodes.forEach(function (node) {\r\n\t                        var $el = node.children[0];\r\n\t                        var maxScrollX = $el.scrollWidth - $el.clientWidth;\r\n\t\r\n\t                        if ( maxScrollX > maxScrollLeft ) {\r\n\t                            maxScrollLeft = maxScrollX;\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    scope.cancelAutoScroll();\r\n\t                    scope.scrollTo(maxScrollLeft, scope.scrollTop);\r\n\t                },\r\n\t                scrollToEndTop: function () {\r\n\t                    var maxScrollTop = 0;\r\n\t\r\n\t                    scope.childNodes.forEach(function (node) {\r\n\t                        var $el = node.children[0];\r\n\t                        var maxScrollY = $el.scrollHeight - $el.clientHeight;\r\n\t\r\n\t                        if ( maxScrollY > maxScrollTop ) {\r\n\t                            maxScrollTop = maxScrollY;\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    scope.cancelAutoScroll();\r\n\t                    scope.scrollTo(scope.scrollLeft, maxScrollTop);\r\n\t                }\r\n\t            }\r\n\t        },\r\n\t        controller: ['$scope', function connectScrollsCtrl($scope) {\r\n\t            var childNodes = $scope.childNodes = [];\r\n\t\r\n\t            this.addScrollArea = function (node) {\r\n\t                childNodes.push(node);\r\n\t            }\r\n\t        }]\r\n\t    }\r\n\t}\r\n\t\r\n\tConnectScrolls.$inject = ['utils', 'kineticEngine'];\r\n\t\r\n\tmodule.exports = ConnectScrolls;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\tfunction ScrollArea () {\r\n\t    return {\r\n\t        require: '^^connectScrolls',\r\n\t        restrict: 'E',\r\n\t        transclude: true,\r\n\t        replace: true,\r\n\t        template: '<span  data-name=\"scroll-area\" ng-transclude></span>',\r\n\t        link: function (scope, element, attrs, connectScrollsCtrl) {\r\n\t            element.attr( 'id', 'PARTICIPATING_NODE_' + Math.random().toString().substring(2, 15) );\r\n\t            connectScrollsCtrl.addScrollArea(element[0]);\r\n\t        }\r\n\t    }\r\n\t}\r\n\t\r\n\tmodule.exports = ScrollArea;\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ngAugmentNativeScroll.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap aab3e68b4238c983fd23","'use strict';\r\n\r\nangular.module('ngAugmentNativeScroll', [])\r\n    .value('kineticEngine', require('./kineticEngine.value'))\r\n    .factory('utils', require('./utils.factory'))\r\n    .directive('connectScrolls', require('./connectScrolls.directive'))\r\n    .directive('scrollArea', require('./scrollArea.directive'));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","'use strict';\r\n\r\nfunction KineticEngine (context, utils) {\r\n    context.leftTracker = function () {\r\n        var now, elapsed, delta;\r\n\r\n        now = utils.getTime();\r\n        elapsed = now - context.timeStamp;\r\n        context.timeStamp = now;\r\n        delta = context.scrollLeft - context.lastScrollLeft;\r\n        context.lastScrollLeft = context.scrollLeft;\r\n\r\n        context.velocityLeft = context.userOptions.movingAverage * (1000 * delta / (1 + elapsed)) + 0.2 * context.velocityLeft;\r\n    }\r\n\r\n    context.topTracker = function () {\r\n        var now, elapsed, delta;\r\n\r\n        now = utils.getTime();\r\n        elapsed = now - context.timeStamp;\r\n        context.timeStamp = now;\r\n        delta = context.scrollTop - context.lastScrollTop;\r\n        context.lastScrollTop = context.scrollTop;\r\n\r\n        context.velocityTop = context.userOptions.movingAverage * (1000 * delta / (1 + elapsed)) + 0.2 * context.velocityTop;\r\n    }\r\n\r\n    context.scrollTo = function(left, top) {\r\n        var correctedLeft = Math.round(left);\r\n        var correctedTop = Math.round(top);\r\n\r\n        context.childNodes.forEach(function(node) {\r\n            var $el = node.children[0];\r\n            var maxScrollX = $el.scrollWidth - $el.clientWidth;\r\n            var maxScrollY = $el.scrollHeight - $el.clientHeight;\r\n\r\n            if ( maxScrollX > 0 && correctedLeft >= 0 && correctedLeft <= maxScrollX ) {\r\n                $el.scrollLeft = correctedLeft;\r\n                context.scrollLeft = correctedLeft;\r\n            }\r\n            if ( maxScrollY > 0 && correctedTop >= 0 && correctedTop <= maxScrollY ) {\r\n                $el.scrollTop = correctedTop;\r\n                context.scrollTop = correctedTop;\r\n            }\r\n        })\r\n    }\r\n\r\n    context.autoScroll = function() {\r\n        var elapsed;\r\n        var deltaY = 0, deltaX = 0, scrollX = 0, scrollY = 0;\r\n        var timeConstant = 325;\r\n\r\n        elapsed = utils.getTime() - context.timeStamp;\r\n\r\n        if ( context.amplitudeTop ) {\r\n            deltaY = -context.amplitudeTop * Math.exp(-elapsed / timeConstant);\r\n        }\r\n        if ( context.amplitudeLeft ) {\r\n            deltaX = -context.amplitudeLeft * Math.exp(-elapsed / timeConstant);\r\n        }\r\n\r\n        if ( deltaX > 0.5 || deltaX < -0.5 ) {\r\n            scrollX = deltaX;\r\n        } else {\r\n            scrollX = 0;\r\n        }\r\n\r\n        if ( deltaY > 0.5 || deltaY < -0.5 ) {\r\n            scrollY = deltaY;\r\n        } else {\r\n            scrollY = 0;\r\n        }\r\n\r\n        context.scrollTo(context.targetLeft + scrollX, context.targetTop + scrollY);\r\n\r\n        if ( scrollX !== 0 || scrollY !== 0 ) {\r\n            context.autoScrollTracker = requestAnimationFrame(context.autoScroll);\r\n        } else {\r\n            context.isAutoScrolling = false;\r\n            context.autoScrollTracker = null;\r\n        }\r\n    }\r\n\r\n    context.cancelAutoScroll = function () {\r\n        if ( context.isAutoScrolling ) {\r\n            cancelAnimationFrame(context.autoScrollTracker);\r\n            context.isAutoScrolling = false;\r\n            context.autoScrollTracker = null;\r\n        }\r\n    }\r\n\r\n    context.tap = function (e) {\r\n        context.pressed = true;\r\n        context.referenceX = utils.getPoint(e, context.hasTouch).x;\r\n        context.referenceY = utils.getPoint(e, context.hasTouch).y;\r\n\r\n        context.velocityTop = context.amplitudeTop = 0;\r\n        context.velocityLeft = context.amplitudeLeft = 0;\r\n\r\n        context.lastScrollTop = context.scrollTop;\r\n        context.lastScrollLeft = context.scrollLeft;\r\n\r\n        context.timeStamp = utils.getTime();\r\n\r\n        context.cancelAutoScroll();\r\n\r\n        context.$listener.addEventListener( 'mousemove', context.swipe, true );\r\n        context.$listener.addEventListener( 'mouseup', context.end, true );\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    context.swipe = function (e) {\r\n        var x, y, deltaX, deltaY;\r\n\r\n        if (context.pressed) {\r\n            x = utils.getPoint(e, context.hasTouch).x;\r\n            y = utils.getPoint(e, context.hasTouch).y;\r\n\r\n            deltaX = context.referenceX - x;\r\n            deltaY = context.referenceY - y;\r\n\r\n            if (deltaX > 2 || deltaX < -2) {\r\n                context.referenceX = x;\r\n            } else {\r\n                deltaX = 0;\r\n            }\r\n            if (deltaY > 2 || deltaY < -2) {\r\n                context.referenceY = y;\r\n            } else {\r\n                deltaY = 0;\r\n            }\r\n\r\n            context.topTracker();\r\n            context.leftTracker();\r\n\r\n            context.scrollTo( context.scrollLeft + deltaX, context.scrollTop + deltaY );\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    context.end = function(e) {\r\n        context.pressed = false;\r\n\r\n        context.timeStamp = utils.getTime();\r\n        context.topTracker();\r\n        context.leftTracker();\r\n\r\n        if (context.velocityTop > 10 || context.velocityTop < -10) {\r\n            context.amplitudeTop = 0.8 * context.velocityTop;\r\n            context.targetTop = Math.round(context.scrollTop + context.amplitudeTop);\r\n        } else {\r\n            context.targetTop = context.scrollTop;\r\n        }\r\n        if (context.velocityLeft > 10 || context.velocityLeft < -10) {\r\n            context.amplitudeLeft = 0.8 * context.velocityLeft;\r\n            context.targetLeft = Math.round(context.scrollLeft + context.amplitudeLeft);\r\n        } else {\r\n            context.targetLeft = context.scrollLeft;\r\n        }\r\n\r\n        context.isAutoScrolling = true;\r\n        context.autoScrollTracker = requestAnimationFrame(context.autoScroll);\r\n\r\n        context.$listener.removeEventListener( 'mousemove', context.swipe );\r\n        context.$listener.removeEventListener( 'mouseup', context.end );\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    if ( ! context.hasTouch && context.userOptions.enableKinetics ) {\r\n        context.$listener.addEventListener( 'mousedown', context.tap, true );\r\n    }\r\n\r\n    context.$on('$destroy', function() {\r\n        context.$listener.removeEventListener( 'mousedown', context.tap );\r\n    });\r\n}\r\n\r\nmodule.exports = KineticEngine;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./kineticEngine.value.js\n// module id = 1\n// module chunks = 0","function UtilsFactory () {\r\n    return {\r\n        findMatchingTarget: function (target, nodes) {\r\n            var found;\r\n\r\n            if ( ! nodes.length || target.tagName === 'BODY' ) {\r\n                return 'BODY';\r\n            }\r\n\r\n            found = nodes.find(function (node) {\r\n                return node.id === target.id\r\n            });\r\n\r\n            if ( found ) {\r\n                return target.id;\r\n            } else {\r\n                return this.findMatchingTarget(target.parentElement, nodes);\r\n            }\r\n        },\r\n        getPoint: function (e, hasTouch) {\r\n            var point;\r\n\r\n            if( hasTouch && event.touches.length ) {\r\n                point = {\r\n                    'x' : event.touches[0].clientX,\r\n                    'y' : event.touches[0].clientY\r\n                }\r\n            } else {\r\n                point = {\r\n                    'x' : event.clientX,\r\n                    'y' : event.clientY\r\n                }\r\n            }\r\n\r\n            return point;\r\n        },\r\n        getTime: Date.now || function getTime () {\r\n            return new Date().utils.getTime();\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = UtilsFactory\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./utils.factory.js\n// module id = 2\n// module chunks = 0","'use strict';\r\n\r\nfunction ConnectScrolls (utils, kineticEngine) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            options: '='\r\n        },\r\n        transclude: true,\r\n        replace: true,\r\n        template: '<span data-name=\"conntect-scrolls\" ng-transclude></span>',\r\n        link: function (scope, element) {\r\n            scope.hasTouch = 'ontouchstart' in window;\r\n            scope.DETECT_EVT = scope.hasTouch ? 'touchstart' : 'mouseover';\r\n            scope.activeId = undefined;\r\n            scope.$listener = element[0];\r\n\r\n            scope.scrollLeft = 0;\r\n            scope.scrollTop = 0;\r\n            scope.lastScrollLeft = 0;\r\n            scope.lastScrollTop = 0;\r\n            scope.targetTop = 0;\r\n            scope.targetLeft = 0;\r\n\r\n            scope.velocityTop = 0;\r\n            scope.velocityLeft = 0;\r\n            scope.amplitudeTop = 0;\r\n            scope.amplitudeLeft = 0;\r\n\r\n            scope.timeStamp = 0;\r\n            scope.referenceX = 0;\r\n            scope.referenceY = 0;\r\n            scope.pressed = false;\r\n            scope.autoScrollTracker = null;\r\n            scope.isAutoScrolling = false;\r\n\r\n            scope.defaultOptions = {\r\n                enableKinetics: false,\r\n                movingAverage: 0.1\r\n            };\r\n            scope.userOptions = angular.extend({}, scope.defaultOptions, scope.options);\r\n\r\n            kineticEngine.call(this, scope, utils);\r\n\r\n            scope.setActiveNode = function (e) {\r\n                scope.activeId = utils.findMatchingTarget(e.target, scope.childNodes);\r\n            }\r\n\r\n            scope.onScroll = function (e) {\r\n                if ( this.pressed || this.isAutoScrolling ) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n\r\n                var target = e.target;\r\n                var valX = undefined;\r\n                var valY = undefined;\r\n\r\n                if ( target.clientWidth !== target.scrollWidth ) {\r\n                    valX = target.scrollLeft;\r\n                    scope.lastScrollLeft = scope.scrollLeft;\r\n                    scope.scrollLeft = valX;\r\n                } else {\r\n                    valX = scope.scrollLeft;\r\n                }\r\n                if ( target.clientHeight !== target.scrollHeight ) {\r\n                    valY = target.scrollTop;\r\n                    scope.lastScrollTop = scope.scrollTop;\r\n                    scope.scrollTop = valY;\r\n                } else {\r\n                    valY = scope.scrollTop;\r\n                }\r\n\r\n                scope.childNodes.forEach(function(node) {\r\n                    if ( node.id !== scope.activeId ) {\r\n                        node.children[0].scrollLeft = valX;\r\n                        node.children[0].scrollTop = valY;\r\n                    }\r\n                });\r\n            }\r\n\r\n            scope.$listener.addEventListener( scope.DETECT_EVT, scope.setActiveNode, true );\r\n            scope.$listener.addEventListener( 'scroll', scope.onScroll, true );\r\n\r\n            scope.$on('$destroy', function() {\r\n                scope.$listener.removeEventListener( scope.DETECT_EVT, scope.setActiveNode );\r\n                scope.$listener.removeEventListener( 'scroll', scope.onScroll );\r\n            });\r\n\r\n            // expose few methods to the parent controller\r\n            scope.$parent.connectedScrolls = {\r\n                scrollToStart: function () {\r\n                    scope.cancelAutoScroll();\r\n                    scope.scrollTo(0, 0);\r\n                },\r\n                scrollToStartLeft: function () {\r\n                    scope.cancelAutoScroll();\r\n                    scope.scrollTo(0, scope.scrollTop);\r\n                },\r\n                scrollToStartTop: function () {\r\n                    scope.cancelAutoScroll();\r\n                    scope.scrollTo(scope.scrollLeft, 0);\r\n                },\r\n                scrollToEnd: function () {\r\n                    var maxScrollLeft = 0;\r\n                    var maxScrollTop = 0;\r\n\r\n                    scope.childNodes.forEach(function (node) {\r\n                        var $el = node.children[0];\r\n                        var maxScrollX = $el.scrollWidth - $el.clientWidth;\r\n                        var maxScrollY = $el.scrollHeight - $el.clientHeight;\r\n\r\n                        if ( maxScrollX > maxScrollLeft ) {\r\n                            maxScrollLeft = maxScrollX;\r\n                        }\r\n                        if ( maxScrollY > maxScrollTop ) {\r\n                            maxScrollTop = maxScrollY;\r\n                        }\r\n                    });\r\n\r\n                    scope.cancelAutoScroll();\r\n                    scope.scrollTo(maxScrollLeft, maxScrollTop);\r\n                },\r\n                scrollToEndLeft: function () {\r\n                    var maxScrollLeft = 0;\r\n\r\n                    scope.childNodes.forEach(function (node) {\r\n                        var $el = node.children[0];\r\n                        var maxScrollX = $el.scrollWidth - $el.clientWidth;\r\n\r\n                        if ( maxScrollX > maxScrollLeft ) {\r\n                            maxScrollLeft = maxScrollX;\r\n                        }\r\n                    });\r\n\r\n                    scope.cancelAutoScroll();\r\n                    scope.scrollTo(maxScrollLeft, scope.scrollTop);\r\n                },\r\n                scrollToEndTop: function () {\r\n                    var maxScrollTop = 0;\r\n\r\n                    scope.childNodes.forEach(function (node) {\r\n                        var $el = node.children[0];\r\n                        var maxScrollY = $el.scrollHeight - $el.clientHeight;\r\n\r\n                        if ( maxScrollY > maxScrollTop ) {\r\n                            maxScrollTop = maxScrollY;\r\n                        }\r\n                    });\r\n\r\n                    scope.cancelAutoScroll();\r\n                    scope.scrollTo(scope.scrollLeft, maxScrollTop);\r\n                }\r\n            }\r\n        },\r\n        controller: ['$scope', function connectScrollsCtrl($scope) {\r\n            var childNodes = $scope.childNodes = [];\r\n\r\n            this.addScrollArea = function (node) {\r\n                childNodes.push(node);\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\nConnectScrolls.$inject = ['utils', 'kineticEngine'];\r\n\r\nmodule.exports = ConnectScrolls;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./connectScrolls.directive.js\n// module id = 3\n// module chunks = 0","'use strict';\r\n\r\nfunction ScrollArea () {\r\n    return {\r\n        require: '^^connectScrolls',\r\n        restrict: 'E',\r\n        transclude: true,\r\n        replace: true,\r\n        template: '<span  data-name=\"scroll-area\" ng-transclude></span>',\r\n        link: function (scope, element, attrs, connectScrollsCtrl) {\r\n            element.attr( 'id', 'PARTICIPATING_NODE_' + Math.random().toString().substring(2, 15) );\r\n            connectScrollsCtrl.addScrollArea(element[0]);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = ScrollArea;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scrollArea.directive.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}